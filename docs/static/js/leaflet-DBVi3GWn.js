import{c as A}from"./element-plus-t8j70jxJ.js";import{l as c}from"./leaflet-BJ9rajuP.js";import"./leaflet.chinatmsproviders-DrehvF96.js";import{s as P,r as b,k as C,X as O,d as R,e as V,b as Z,c as j,a as $,R as N,J as F,o as G,u as S}from"./@vue-AhIeOBdH.js";import{l as X,a as z,d as I}from"./@turf-Bfw5sV2K.js";import{V as W}from"./@element-plus-CLWHGgw5.js";import{_ as Y}from"./plugin-vueexport-helper-DlAUqK2U.js";import"./lodash-es-CVJ_Bk8S.js";import"./@vueuse-CAc1CHwG.js";import"./@sxzz-D_chPuIy.js";import"./@ctrl-r5W6hzzQ.js";import"./dayjs-BkBTkyCe.js";import"./async-validator-9PlIezaS.js";import"./memoize-one-BdPwpGay.js";import"./normalize-wheel-es-BQoi3Ox2.js";import"./@floating-ui-D0iZPv2f.js";const J=(u,t)=>{const e=P(null),l=c.tileLayer.chinaProvider("GaoDe.Normal.Map",{maxZoom:18,minZoom:4}),f=c.layerGroup([l]);let a=null,i="start",p=null;const d=P([]),g=P([]),v=b(0),y=()=>{const s=c.latLng(-90,-180),o=c.latLng(90,180),n=c.latLngBounds(s,o),r=c.canvas();e.value=new c.Map(u,{maxZoom:18,minZoom:4,zoom:14,attributionControl:!1,layers:[f],maxBounds:n,renderer:r,crs:c.CRS.EPSG3857,zoomControl:!1})},M=()=>{var s;if(t!=null&&t.length){const o=[];if(t.forEach(r=>{o.push({lng:r.pointData[0].lon,lat:r.pointData[0].lat}),c.circleMarker({lat:r.pointData[0].lat,lng:r.pointData[0].lon},{stroke:!0,color:"#fff",fillColor:"red",fill:!0,fillOpacity:1,radius:10}).bindTooltip(r.name,{permanent:!0,direction:"top",className:"my-custom-tooltip"}).addTo(e.value)}),t.length===1){const r=t[0].pointData[0];a=c.polyline([[r.lat-.003,r.lon-.01],[r.lat-.003,r.lon+.01]],{color:"red"}).addTo(e.value),o.push(a.getLatLngs())}const n=c.latLngBounds(o);if((s=e.value)==null||s.fitBounds(n,{padding:[10,10]}),t.length>1){const r=n.getNorthWest(),m=n.getSouthWest(),L=n.getNorthEast(),T=n.getSouthEast();a=c.polyline([[(r.lat+m.lat)/2,r.lng-e.value.getZoom()*.1],[(L.lat+T.lat)/2,L.lng+e.value.getZoom()*.1]],{color:"red"}).addTo(e.value)}x()}},h=()=>{var s,o;(s=e.value)==null||s.on("click",w),(o=e.value)==null||o.on("mousemove",k)},w=s=>{if(i==="start"){a&&(g.value.forEach(n=>{n.remove()}),a.remove());const o=s.latlng;p=o,a=c.polyline([o,o],{color:"red",weight:3,dashArray:"5,5"}).addTo(e.value),i="drawing"}else if(i==="drawing"){const o=s.latlng;a==null||a.setLatLngs([p,o]),a==null||a.setStyle({dashArray:void 0}),i="start"}},k=s=>{i==="drawing"&&p&&(a==null||a.setLatLngs([p,s.latlng]))},D=()=>{var s,o;(s=e.value)==null||s.off("click",w),(o=e.value)==null||o.off("mousemove",k)},E=()=>{e.value&&e.value.remove()},x=()=>{if(a){d.value=[];const s=a.getLatLngs().map(n=>[n.lng,n.lat]),o=X(s);if(t==null||t.forEach((n,r)=>{const m=H([n.pointData[0].lon,n.pointData[0].lat],o.geometry.coordinates[0],o.geometry.coordinates[1]);m&&d.value.push({point:m,...n})}),d.value.length===1){const n=_(o,d.value[0].point);Reflect.set(d.value[0],"distance",n)}else d.value.sort((n,r)=>{const m=_(o,n.point);Reflect.set(n,"distance",m);const L=_(o,r.point);return Reflect.set(r,"distance",L),m-L});v.value=_(o,o.geometry.coordinates[1]),d.value.forEach((n,r)=>{g.value[r]=c.circleMarker([n.point[1],n.point[0]],{stroke:!0,color:"#fff",fillColor:"green",fill:!0,fillOpacity:1,radius:5}).bindTooltip(`${r+1}`,{permanent:!0,direction:"top"}).addTo(e.value)})}};function _(s,o){const n=s.geometry.coordinates[0],r=z(o);return I(n,r,{units:"kilometres"})}return C(()=>{y(),M()}),O(()=>{E()}),{map:e,drawLine:h,nearestPoints:d,getNearestPointOnLine:x,removeLinsener:D,lineLength:v}};function B(u,t){return u[0]*t[0]+u[1]*t[1]}function U(u,t,e){const l=[e[0]-t[0],e[1]-t[1]],f=[u[0]-t[0],u[1]-t[1]],a=B(f,l)/B(l,l),i=[l[0]*a,l[1]*a];return[t[0]+i[0],t[1]+i[1]]}function q(u,t,e){const[l,f]=u,[a,i]=t,[p,d]=e;return l>=Math.min(a,p)&&l<=Math.max(a,p)&&f>=Math.min(i,d)&&f<=Math.max(i,d)}function H(u,t,e){const l=U(u,t,e);return q(l,t,e)?l:null}const K={class:"leaflet-container"},Q={name:""},tt=R({...Q,props:{data:{type:Array,default:()=>[]}},emits:["getPoints"],setup(u,{emit:t}){const e=u,l=V({drawing:!1}),f=Z(()=>l.drawing?"var(--el-color-primary)":"var(--el-color-info)"),{drawLine:a,nearestPoints:i,getNearestPointOnLine:p,removeLinsener:d,lineLength:g}=J("map",e.data),v=t,y=()=>{l.drawing=!l.drawing,l.drawing?a():(d(),p(),v("getPoints",i,g))};return C(()=>{v("getPoints",i,g)}),(M,h)=>{const w=A;return G(),j("div",K,[h[0]||(h[0]=$("div",{id:"map",class:"h-full w-full"},null,-1)),N(w,{color:f.value,class:"draw-icon",onClick:y},{default:F(()=>[N(S(W))]),_:1},8,["color"])])}}}),Lt=Y(tt,[["__scopeId","data-v-d502fb33"]]);export{Lt as default};
