let o;const m=new Uint8Array(16);function U(){if(!o&&(o=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!o))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return o(m)}const d=[];for(let n=0;n<256;++n)d.push((n+256).toString(16).slice(1));function g(n,t=0){return d[n[t+0]]+d[n[t+1]]+d[n[t+2]]+d[n[t+3]]+"-"+d[n[t+4]]+d[n[t+5]]+"-"+d[n[t+6]]+d[n[t+7]]+"-"+d[n[t+8]]+d[n[t+9]]+"-"+d[n[t+10]]+d[n[t+11]]+d[n[t+12]]+d[n[t+13]]+d[n[t+14]]+d[n[t+15]]}const l=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),p={randomUUID:l};function h(n,t,i){if(p.randomUUID&&!t&&!n)return p.randomUUID();n=n||{};const e=n.random||(n.rng||U)();if(e[6]=e[6]&15|64,e[8]=e[8]&63|128,t){i=i||0;for(let c=0;c<16;++c)t[i+c]=e[c];return t}return g(e)}const u=[];for(let n=0;n<256;++n)u.push((n+256).toString(16).slice(1));function a(n,t=0){return(u[n[t+0]]+u[n[t+1]]+u[n[t+2]]+u[n[t+3]]+"-"+u[n[t+4]]+u[n[t+5]]+"-"+u[n[t+6]]+u[n[t+7]]+"-"+u[n[t+8]]+u[n[t+9]]+"-"+u[n[t+10]]+u[n[t+11]]+u[n[t+12]]+u[n[t+13]]+u[n[t+14]]+u[n[t+15]]).toLowerCase()}let y;const x=new Uint8Array(16);function D(){if(!y){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");y=crypto.getRandomValues.bind(crypto)}return y(x)}const I=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),r={randomUUID:I};function R(n,t,i){if(r.randomUUID&&!t&&!n)return r.randomUUID();n=n||{};const e=n.random||(n.rng||D)();if(e[6]=e[6]&15|64,e[8]=e[8]&63|128,t){i=i||0;for(let c=0;c<16;++c)t[i+c]=e[c];return t}return a(e)}export{R as a,h as v};
